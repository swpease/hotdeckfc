% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/samplers.R
\name{hot_deck_n_leads_sampler}
\alias{hot_deck_n_leads_sampler}
\title{Generate a hot deck forecast value using a sequence of \code{n} \code{lead}s.}
\usage{
hot_deck_n_leads_sampler(filter_na_col_names = "lead_1")
}
\arguments{
\item{filter_na_col_names}{char vec. The names of any columns that you want to
filter any NAs from.}
}
\value{
partially applied sampler
}
\description{
Forecast using samples' \code{n} \code{lead}s: (lead(obs), lead(lead(obs)), ...).
}
\details{
The premise is like for \code{hot_deck_lead_sampler}, except that each randomly
sampled row's \code{n} leads are used as forecasts (not exceeding your
\code{hot_deck_forecast}'s \code{h}). Each sampling after the first one (which uses
the latest observation, just like \code{hot_deck_lead_sampler}) uses the
highest-order non-NA lead from the prior sampling. So if leads 3 through n are
NA, it'll use lead_2. As such, having an empty \code{filter_na_col_names} risks
the method breaking because it starts looking for NAs.

For \code{n_closest}, \code{dplyr::slice_min} is used, and tie values are included.
}

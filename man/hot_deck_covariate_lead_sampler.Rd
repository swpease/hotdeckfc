% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/samplers.R
\name{hot_deck_covariate_lead_sampler}
\alias{hot_deck_covariate_lead_sampler}
\title{Generate a hot deck forecast value using a covariate's \code{lead}s.}
\usage{
hot_deck_covariate_lead_sampler(
  next_cov_obs_col_name = "next_cov_obs",
  next_target_obs_col_name = "next_target_obs",
  filter_na_col_names = next_cov_obs_col_name
)
}
\arguments{
\item{next_cov_obs_col_name}{Name of the column in your data
containing the next covariate observation (from, e.g. \code{lead_cov_mutator}).}

\item{next_target_obs_col_name}{The corresponding target observation
(from, e.g. \code{lead_cov_mutator}).}

\item{filter_na_col_names}{char vec. The names of any columns that you want to
filter any NAs from.}
}
\value{
list(new_current_obs, forecast), where
new_current_obs = The value to use for \code{current_obs} in the next iteration.
forecast = The forecasted value.
}
\description{
Given a \code{local_rows} and \code{current_obs}, it:
\itemize{
\item Finds those rows in \code{local_rows} with a covariate's
observations closest to \code{current_obs}.
\item Takes the \code{n_closest} of those.
\item Randomly samples one of those.
\item Returns:
\itemize{
\item That sample's "tomorrow"s covariate's observation as the next \code{current_obs}
\item That sample's tomorrow's target variable's observation and the \code{forecast}.
}
}
}
\details{
For \code{n_closest}, \code{dplyr::slice_min} is used, and tie values are included.

For \code{filter_na_col_names}, you must include the \code{next_cov_obs_col_name},
or the sampling will break.
}

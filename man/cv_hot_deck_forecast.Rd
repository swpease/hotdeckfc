% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/CV.R
\name{cv_hot_deck_forecast}
\alias{cv_hot_deck_forecast}
\title{Generate a num-seasons-fold(-ish) hot deck forecast.}
\usage{
cv_hot_deck_forecast(
  .data,
  .datetime,
  .observation,
  offset,
  times,
  h,
  window_back,
  window_fwd,
  n_closest,
  train_test_split_type = c("conservative", "leaky")
)
}
\arguments{
\item{.data}{tsibble. The data. Passed via pipe.}

\item{.datetime}{The datetime column of .data. Passed via pipe.}

\item{.observation}{The observation column of .data. Passed via pipe.}

\item{offset}{integer. Offset (in +- days) from the most recent row of .data
to use as the starting point.}

\item{times}{The number of simulated sample paths to produce per hot deck forecast.}

\item{h}{How many days to forecast.}

\item{window_back}{How many days back to include in the window for
a given season.}

\item{window_fwd}{How many days forward to include in the window for
a given season.}

\item{n_closest}{The number of closest observations to pick from
per hot deck random sampling.}

\item{train_test_split_type}{default = "conservative". See help for details.}
}
\value{
list containing:
forecasts: a \code{tibble} of hot deck forecasts:
- nrow = (h * times) \* k (k is # of viable seasons),
- columns:
- datetime: the date for the forecast
- forecast: the forecasted value
- simulation_num: the simulated sample path number
- k: the CV number, i.e. the hot deck forecast number
test_data_sets: a \code{tsibble} of test data sets from your \code{.data}
- new columns:
- h: the horizon number
- k: the CV number, i.e. the hot deck forecast number
}
\description{
Produces a set of hot deck forecasts, one per season if possible.
}
\details{
If the \code{offset = 0}, then the CV will use the latest datetime as a
starting point, and go back one year at a time through the data.
If the observation is missing, then that year's hot deck forecast is
skipped. The latest datetime is also skipped, because there's no test
data to use for its forecasts.

If \code{offset} is non-zero, then the starting point will be the latest
datetime + the offset.

The parameters \code{times} through \code{n_closest}, are passed to \code{hot_deck_forecast}.

The current implementation has two train-test data splitting methods.
The default is "conservative", which goes as follows:
The testing set is any data in the forecast horizon (\code{h}) for
the current season in question. The training data is any data before
that or after the \code{window_fwd} from the largest \code{h}. This is aimed at
eliminating data leakage. While the data after the largest \code{h} but within
the \code{window_fwd} should be minimally leaky, it seemed off for larger \code{h}'s
to have increasing pools of data to draw from.

The alternative splitting method, "leaky", uses all of the data
in the training set. While this leaks data, it might be a better option
(TBD) for cases of only a few seasons worth of data.
In that case, the default conservative implementation would have markedly
reduced data to draw from, which seems like it could significantly effect
the conclusion on which hyperparameter values to select.
}

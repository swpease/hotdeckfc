% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot.R
\name{plot_grid_search_forecasts}
\alias{plot_grid_search_forecasts}
\title{Plot grid search forecasts}
\usage{
plot_grid_search_forecasts(
  grid_out,
  .data,
  observation_col_name = "observation",
  window_back = 120,
  window_fwd = 120,
  forecasts_geom = c("line", "point")
)
}
\arguments{
\item{grid_out}{output from \code{\link[=grid_search_hot_deck_cv]{grid_search_hot_deck_cv()}}.}

\item{.data}{tsibble. Your data.}

\item{observation_col_name}{string. The observation column name.}

\item{window_back}{positive integer. How many days back to include
of the .data.}

\item{window_fwd}{positive integer. How many days forward to include
of the .data.}

\item{forecasts_geom}{string. The geom to use for the forecasts on the ggplot}
}
\description{
Plot the forecasts produced by \code{\link[=grid_search_hot_deck_cv]{grid_search_hot_deck_cv()}}.
}
\details{
Using a \code{forecasts_geom} of "line" is more useful for less zig-zaggy
forecasts. This generally means small values of \code{n_closest}. Using "point"
is good for zig-zaggy forecasts, because in these cases, "line" yeilds a
spiky blob.
}
\examples{
grid = build_grid(
  h = 2,
  n_closest = c(5, 10),
  # even if you only use a single `build_window_args()`, wrap in `list()`
  window_args = list(build_window_args(20)),
  # also need to wrap in list
  sampler_args = list(
    build_sampler_args(sa_name = "nxt",
                       sampler = sample_lead(),  # remember to call!
                       appender = append_lead)
  )
)
out = grid_search_hot_deck_cv(hotdeckfc::SUGG_temp,
                              .datetime = date,
                              .observation = observation,
                              grid = grid)
suppressWarnings(plot_grid_search_forecasts(out, hotdeckfc::SUGG_temp))

}

% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/samplers.R
\name{sample_forecasted_covariate}
\alias{sample_forecasted_covariate}
\title{Generate a hot deck forecast value using a covariate's simulated sample path (forecast).}
\usage{
sample_forecasted_covariate(
  next_target_obs_col_name = "next_target_obs",
  filter_na_col_names = vector(mode = "character")
)
}
\arguments{
\item{next_target_obs_col_name}{The column name of the lead of the target
observation.}

\item{filter_na_col_names}{The column names for which rows with NAs should
be removed before random sampling.}
}
\value{
Partially applied function to be passed to \code{hot_deck_forecast}.
}
\description{
Given a covariate's forecast, this sampler generates forecasts of the target
by taking the lead (next) target observation of a row randomly sampled from
those rows with covariate observations close to the current covariate
forecast.
}
\details{
Supply the covariate forecasts to \code{hot_deck_forecast}.

The first forecast uses the most recent covariate observation. All subsequent
forecasts use the covariate forecasts.
Forecasts beyond the forecast horizon length of your covariate forecasts,
which would happen if \code{h} exceeds said forecast horizon length + 1, are NA.

If your covariate data has more recent observations than your target variable,
then you have a few options:
\enumerate{
\item Do nothing. The sampled target values will probably include NAs from
these missing recent observations, because the closest covariate rows
will probably include non-zero of the most recent observations.
\item Use \code{filter_na_col_names}. Remove NAs from the target leads column.
You may, however, want to retain NAs from earlier data, in which case...
\item Trim your data to the latest target lead observation, and put the
trimmed covariate observations in the \code{covariate_forecasts} arg in
\code{hot_deck_forecast}.
}

For \code{filter_na_col_names}, you could supply:
\itemize{
\item Nothing, yielding possibly NA forecasts and possibly sampling from
NA covariate observations.
\item The target leads column,
in which case you'd have a forecast value every time.
\item The covariates column,
in which case you could have NA forecast values.
\item Both columns, ensure forecast values are not NA and you avoid NA
covariate observations.
}

For \code{n_closest}, \code{dplyr::slice_min} is used, and tie values are included.

Detailed procedure:
Given a \code{local_rows} and covariate's \code{current_obs} and forecasts, it:
\itemize{
\item Finds those rows in \code{local_rows} with a covariate's
observations closest to \code{current_obs} / the current forecast.
\item Takes the \code{n_closest} of those.
\item Randomly samples one of those.
\item Returns:
\itemize{
\item The covariate's forecasts, minus the last used obs,
as the next \code{current_obs}.
\item That sample's tomorrow's target variable's observation
(from the \code{next_target_obs_col_name} column) as the \code{forecast}.
}
}
}
